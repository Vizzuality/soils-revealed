@import 'css/settings';

.c-areas-interest-tab-analysis {
  display: flex;
  flex-direction: column;
  max-height: calc(100vh - #{map-get($spacers, 3) + rem(65)});
  margin: #{-2 * map-get($spacers, 3)}; // This is needed so the separators take the full width
  padding: 2 * map-get($spacers, 3);
  overflow: hidden;

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    h4 {
      font-size: $font-size-l;
    }

    .btn {
      padding: 0;
      border-radius: 100%;
    }

    .c-icon {
      display: block;
      width: rem(20);
      height: rem(20);
    }

    .c-switch {
      label {
        text-transform: uppercase;
      }
    }

    .c-hint-button {
      .c-icon {
        width: rem(16);
        height: rem(16);
      }
    }
  }

  section {
    position: relative;
    padding: map-get($spacers, 4) 0;

    &:last-of-type:after {
      content: none;
    }

    &:after {
      display: block;
      position: absolute;
      bottom: 0;
      left: -#{2 * map-get($spacers, 3)};
      width: calc(100% + #{4 * map-get($spacers, 3)});
      height: rem(1);
      background-color: $border-color-1;
      content: '';
    }
  }

  .static-container {
    flex-shrink: 0;
    position: relative;
    padding-bottom: map-get($spacers, 4);

    &:after {
      display: block;
      position: absolute;
      bottom: 0;
      left: -#{2 * map-get($spacers, 3)};
      width: calc(100% + #{4 * map-get($spacers, 3)});
      height: rem(1);
      background-color: $border-color-1;
      content: '';
    }
  }

  .scrollable-container {
    flex-grow: 1;
    overflow-y: auto;
    margin: 0 #{-2 * map-get($spacers, 3)}; // This is needed so the separators take the full width
    padding: 0 #{2 * map-get($spacers, 3)};
  }

  .banner {
    font-family: $font-family-2;
    @include font-size($font-size-xxs);
    background-color: $background-color-1;
    padding: map-get($spacers, 2);
    margin: 0;

    button {
      display: inline-block;
      background: none;
      border: 0;
      padding: 0;
      font-family: $font-family-2;
      @include font-size($font-size-xxs);
      color: currentColor;
      text-decoration: underline;

      &:focus {
        border-color: darken($primary, 10%);
        outline: none;

        @if $enable-shadows {
          box-shadow: $btn-box-shadow, 0 0 0 $btn-focus-width rgba(mix(color-yiq($primary), $primary, 15%), .5);
        } @else {
          box-shadow: 0 0 0 $btn-focus-width rgba(mix(color-yiq($primary), $primary, 15%), .5);
        }
      }
    }
  }

  .soc-stock-switcher {
    display: flex;
    padding: 0;
    border: rem(1) solid $primary;

    .c-radio {
      flex-grow: 1;
      min-height: auto;
      margin: rem(1);
      padding: 0 map-get($spacers, 3);
      font-family: $font-family-2;
      @include font-size($font-size-xs);
      color: $body-color;
      text-transform: uppercase;
      text-align: center;
      line-height: $line-height-base;
      cursor: pointer;

      &.-checked {
        color: $white;
        background-color: $primary;
      }

      input {
        @include sr-only();
      }

      label {
        cursor: pointer;

        &:before,
        &:after {
          content: none;
        }
      }
    }
  }

  .chart-intro {
    margin: map-get($spacers, 2) 0 map-get($spacers, 4);
    font-family: $font-family-2;
    @include font-size($font-size-s);
    line-height: 1.75;

    strong {
      font-weight: $font-weight-medium;
    }

    .c-dropdown {
      line-height: 1.5;

      .target-button {
        font-size: inherit;
      }
    }
  }

  .recharts-responsive-container {
    font-family: $font-family-2;
    overflow: hidden; // Prevent the tooltip from temporarily add scroll

    .recharts-yAxis {
      .recharts-text {
        @include font-size($font-size-xxxs);
        fill: $primary;
      }

      .recharts-label {
        @include font-size($font-size-xxs);
        font-weight: $font-weight-medium;
        fill: $primary;
      }
    }

    .recharts-xAxis {
      .recharts-cartesian-axis-line {
        stroke-width: rem(2);
        stroke: $primary;
      }

      .recharts-cartesian-axis-tick-line {
        stroke: $primary;
      }

      .recharts-text {
        @include font-size($font-size-xxs);
        fill: $primary;
      }

      .recharts-label {
        font-weight: $font-weight-medium;
      }

      .recharts-legend {
        @include font-size($font-size-xxs);
        fill: $primary;

        rect.compare {
          stroke-width: rem(1);
          stroke: $black;
        }

        line {
          stroke-width: rem(2);
          stroke: $primary;
        }
      }
    }

    .recharts-reference-line-line {
      // We can't use the `rgba` function here because there might be a cartesian grid line below
      // the reference line
      stroke: lighten($primary, 30%);
    }

    .recharts-cartesian-grid,
    .recharts-reference-line,
    .recharts-tooltip-cursor:not(.recharts-rectangle) {
      stroke: rgba($primary, 0.2);
    }

    .recharts-tooltip-cursor.recharts-rectangle {
      fill: rgba($primary, 0.1) !important;
    }

    .recharts-line {
      path {
        stroke-width: rem(2);
        stroke: $primary;
      }
    }

    .recharts-bar-rectangle {
      path {
        stroke-width: rem(1);
        stroke: $black;
      }
    }

    .recharts-active-dot {
      circle {
        stroke: $body-bg;
        fill: $primary;
      }
    }

    #change-chart-bar-pattern {
      rect {
        fill: $body-bg;
      }

      circle {
        fill: $black;
        stroke: none;
      }
    }
  }

  .change-by-land-cover-section {
    .chart-intro {
      margin-bottom: map-get($spacers, 2);
    }

    .c-checkbox {
      margin-bottom: map-get($spacers, 2);

      label {
        text-transform: uppercase;
      }
    }

    .recharts-responsive-container {
      overflow: visible;

      svg {
        overflow: visible;
      }

      .recharts-xAxis {
        .recharts-label {

          .-light {
            font-weight: $font-weight-normal;
          }
        }
      }

      .recharts-yAxis {
        .-scenario {
          font-weight: $font-weight-medium;
          text-transform: uppercase;
        }
      }

      .recharts-bar-rectangle {
        path {
          stroke-width: 0;
        }
      }

      .class-button {
        position: relative;
        top: rem(2); // Needed for the focus ring
        left: rem(2); // Needed for the focus ring
        width: rem(18);
        height: rem(18);
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0;
        border: none;

        .c-icon {
          transform: rotate(-90deg);
          transform-origin: center;
          width: rem(12);
          height: rem(12);

          use {
            stroke: currentColor;
          }
        }

        &.-back {
          .c-icon {
            transform: rotate(90deg);
          }
        }
      }
    }

    .recharts-tooltip-wrapper {
      z-index: 10;
    }
  }
}

// The tooltip may be portaled and thus is outside the main class
.recharts-default-tooltip {
  padding: map-get($spacers, 2) !important;
  font-family: $font-family-2;
  @include font-size($font-size-xxs);
  border: rem(1) solid $primary !important;
  background: $body-bg !important;
  box-shadow: $box-shadow-1;

  .recharts-tooltip-item {
    padding: 0 !important;
    color: $body-color !important;
    font-weight: $font-weight-medium;
  }

  &.-change-by-land-cover {
    min-width: rem(280);
    z-index: 10;

    ul {
      list-style: none;
      padding: 0;
      margin: 0;
      display: inline-grid;
      grid-auto-flow: column;
      grid-template-rows: repeat(8, auto);
      column-gap: map-get($spacers, 4);

      li {
        width: rem(310);
        display: flex;
        margin-top: map-get($spacers, 2);
      }
    }

    .color-pill {
      position: relative;
      top: map-get($spacers, 1);
      margin-right: map-get($spacers, 2);
      width: rem(12);
      height: rem(12);
      flex-shrink: 0;
    }

    .values {
      display: flex;
      flex-wrap: wrap;

      & > *:nth-child(2) {
        margin-left: map-get($spacers, 2);

        &:before {
          content: '| ';
        }
      }
    }

    .note {
      margin: map-get($spacers, 3) 0 0;

      &.-small {
        max-width: rem(280);
      }

      .c-icon {
        width: rem(16);
        height: rem(16);
      }
    }
  }
}
